{"version":3,"sources":["properties.js"],"names":["define","analysis","qlik","$q","enableDebugMode","getNumberFormatSimple","app","currApp","undefined","defer","getAppLayout","layout","thousandSep","qLocaleInfo","qThousandSep","decimalSep","qDecimalSep","resolve","value","label","promise","type","component","items","dims","Dimensions","ref","itemTitleRef","allowAdd","allowRemove","addTranslation","expression","maxlength","meas","Measures","numberFormatting","options","defaultValue","formatting","show","data","numberFormattingSimple","then","customCurrency","prefixSuffix","numberFormatPattern","moneyFormatPattern","customFormatPattern","sorting","indexOf","props","analysisTypeId","sortDim","dimSort","dimSortByExpression","dimSortByExpressionAsc","dimSortByExpressionString","dimSortByNum","dimSortByNumAsc","dimSortByAlph","dimSortByAlphAsc","addons","uses","dataHandling","ReferenceLine","fixlimit","fixlimitlabel","fixlimitstyle","fixlimitwidth","fixlimitcolor","analysisCategoryDropDown","analysisCategories","map","d","id","name","analysisTypeDropDown","res","analysisTypes","filter","category","analysisCategoryId","displayTable","displayFormula","extendLine","extendDurations","interval","confidenceLevel","frequency","numberOfClusters","optimizationMethod","clusterMax","bootstrap","scaleData","dividedBy","differencing","seasonalDifferences","firstDifferences","lagMax","lagMaxValue","lag","lagValue","decomposeInFourCharts","forecastingPeriods","displayARIMAParams","autoARIMA","AROrder","DegreeOfDifferencing","MAOrder","SeasonalAROrder","SeasonalDegreeOfDifferencing","SeasonalMAOrder","displayHoltWintersParams","autoHoltWinters","holtWintersAlpha","holtWintersBeta","holtWintersGamma","seasonal","numOfFrequentTerms","tolower","removeNumbers","stopwords","removePunctuation","stemming","rpartMethod","minSplit","minBucket","cp","maxDepth","defaultCollapseLevel","displayResultsOnAllNodes","calcOddsRatio","splitDataset","splitPercentage","min","max","debugMode","debugModeLink","url","settings","presentation","line","datapoints","borderWidth","step","pointRadius","bubbleSize","marginTop","marginBottom","marginRight","marginLeft","defineScreenSize","screenWidth","screenHeight","colorsAndLegend","colors","colorForMain","colorForSub","showLegend","xAxis","xLabelsAndTitle","xAxisPosition","xScale","xAxisType","yAxis","yLabelsAndTitle","yAxisPosition","yScale","zAxis","zLabelsAndTitle"],"mappings":"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","file":"../../properties.js","sourcesContent":["define(['./lib/js/analysis/analysis', 'qlik', 'ng!$q'], (analysis, qlik, $q) => {\n  // Control on debug mode\n  const enableDebugMode = true;\n\n  const getNumberFormatSimple = () => {\n    const app = qlik.currApp(this);\n    const defer = $q.defer();\n\n    app.getAppLayout((layout) => {\n      const thousandSep = layout.qLocaleInfo.qThousandSep;\n      const decimalSep = layout.qLocaleInfo.qDecimalSep;\n      return defer.resolve(\n        [\n          {\n            value: 0,\n            label: `1${thousandSep}000`,\n          },\n          {\n            value: 1,\n            label: `1${thousandSep}000${decimalSep}1`,\n          },\n          {\n            value: 2,\n            label: `1${thousandSep}000${decimalSep}12`,\n          },\n          {\n            value: 3,\n            label: '12%',\n          },\n          {\n            value: 4,\n            label: `12${decimalSep}3%`,\n          },\n          {\n            value: 5,\n            label: `12${decimalSep}34%`,\n          },\n        ]);\n    });\n    return defer.promise;\n  };\n\n  return {\n    type: 'items',\n    component: 'accordion',\n    items: {\n      // dimensions: {\n      //   uses: \"dimensions\",\n      //   show: false,\n      // },\n      // measures: {\n      //   uses: \"measures\",\n      //   show: false,\n      // },\n      dims: {\n        label: 'Dimensions',\n        items: {\n          Dimensions: {\n            type: 'array',\n            ref: 'props.dimensions',\n            label: 'Dimensions',\n            itemTitleRef: 'label',\n            allowAdd: true,\n            allowRemove: true,\n            addTranslation: 'Add dimension',\n            items: {\n              expression: {\n                label: 'Field',\n                type: 'string',\n                ref: 'expression',\n                expression: 'optional',\n              },\n              label: {\n                label: 'Label',\n                type: 'string',\n                maxlength: 100,\n                ref: 'label',\n              },\n            },\n          },\n        },\n      },\n      meas: {\n        label: 'Measures',\n        items: {\n          Measures: {\n            type: 'array',\n            ref: 'props.measures',\n            label: 'Measures',\n            itemTitleRef: 'label',\n            allowAdd: true,\n            allowRemove: true,\n            addTranslation: 'Add measure',\n            items: {\n              expression: {\n                label: 'Expression',\n                type: 'string',\n                ref: 'expression',\n                expression: 'optional',\n              },\n              label: {\n                label: 'Label',\n                type: 'string',\n                maxlength: 100,\n                ref: 'label',\n              },\n              numberFormatting: {\n                type: 'string',\n                component: 'dropdown',\n                label: 'Number formatting',\n                ref: 'numberFormatting',\n                options: [\n                  {\n                    value: 0,\n                    label: 'Auto',\n                  },\n                  {\n                    value: 1,\n                    label: 'Number',\n                  },\n                  {\n                    value: 2,\n                    label: 'Money',\n                  },\n                  {\n                    value: 5,\n                    label: 'Custom',\n                  },\n                ],\n                defaultValue: 0,\n              },\n              formatting: {\n                type: 'boolean',\n                component: 'switch',\n                label: 'Formatting',\n                ref: 'formatting',\n                options: [{\n                  value: true,\n                  label: 'Simple',\n                }, {\n                  value: false,\n                  label: 'Custom',\n                }],\n                defaultValue: true,\n                show: (data) => {\n                  return data.numberFormatting === 1;\n                },\n              },\n              numberFormattingSimple: {\n                type: 'string',\n                component: 'dropdown',\n                ref: 'numberFormattingSimple',\n                options: getNumberFormatSimple().then((items) => {\n                  return items;\n                }),\n                defaultValue: 2,\n                show: (data) => {\n                  return data.numberFormatting === 1 && (data.formatting === true || typeof data.formatting == 'undefined');\n                },\n              },\n              customCurrency: {\n                label: 'Currency',\n                type: 'string',\n                maxlength: 100,\n                ref: 'customCurrency',\n                defaultValue: '$',\n                show: (data) => {\n                  return data.numberFormatting === 2;\n                },\n              },\n              prefixSuffix: {\n                type: 'string',\n                component: 'dropdown',\n                ref: 'prefixSuffix',\n                options: [{\n                  value: 'prefix',\n                  label: 'Prefix',\n                }, {\n                  value: 'suffix',\n                  label: 'Suffix',\n                }],\n                defaultValue: 'prefix',\n                show: (data) => {\n                  return data.numberFormatting === 2;\n                },\n              },\n              numberFormatPattern: {\n                label: 'Format pattern',\n                type: 'string',\n                maxlength: 100,\n                ref: 'numberFormatPattern',\n                defaultValue: ',.2f',\n                show: (data) => {\n                  return data.numberFormatting === 1 && data.formatting === false;\n                },\n              },\n              moneyFormatPattern: {\n                label: 'Format pattern',\n                type: 'string',\n                maxlength: 100,\n                ref: 'moneyFormatPattern',\n                defaultValue: ',.2f',\n                show: (data) => {\n                  return data.numberFormatting === 2;\n                },\n              },\n              customFormatPattern: {\n                label: 'Format pattern',\n                type: 'string',\n                maxlength: 100,\n                ref: 'customFormatPattern',\n                defaultValue: ',.2f',\n                show: (data) => {\n                  return data.numberFormatting === 5;\n                },\n              },\n            },\n          },\n        },\n      },\n      sorting: {\n        type: 'items',\n        label: 'Sorting',\n        show: (data) => {\n          return [0, 17].indexOf(data.props.analysisTypeId) >= 0;\n        },\n        items: {\n          sortDim: {\n            type: 'items',\n            label: 'Dimension',\n            items: {\n              dimSort: {\n                type: 'boolean',\n                component: 'switch',\n                label: 'Sorting',\n                ref: 'props.dimSort',\n                options: [{\n                  value: true,\n                  label: 'Auto',\n                }, {\n                  value: false,\n                  label: 'Custom',\n                }],\n                defaultValue: true,\n              },\n              dimSortByExpression: {\n                type: 'boolean',\n                label: 'Sort by expression',\n                ref: 'props.dimSortByExpression',\n                defaultValue: false,\n                show: (data) => {\n                  return !data.props.dimSort;\n                },\n              },\n              dimSortByExpressionAsc: {\n                type: 'integer',\n                component: 'dropdown',\n                ref: 'props.dimSortByExpressionAsc',\n                options: [{\n                  value: 1,\n                  label: 'Ascending',\n                }, {\n                  value: -1,\n                  label: 'Descending',\n                }],\n                defaultValue: 1,\n                show: (data) => {\n                  return !data.props.dimSort && data.props.dimSortByExpression;\n                },\n              },\n              dimSortByExpressionString: {\n                label: 'Expression',\n                type: 'string',\n                ref: 'props.dimSortByExpressionString',\n                expression: 'optional',\n                show: (data) => {\n                  return !data.props.dimSort && data.props.dimSortByExpression;\n                },\n              },\n              dimSortByNum: {\n                type: 'boolean',\n                label: 'Sort numerically',\n                ref: 'props.dimSortByNum',\n                defaultValue: false,\n                show: (data) => {\n                  return !data.props.dimSort;\n                },\n              },\n              dimSortByNumAsc: {\n                type: 'integer',\n                component: 'dropdown',\n                ref: 'props.dimSortByNumAsc',\n                options: [{\n                  value: 1,\n                  label: 'Ascending',\n                }, {\n                  value: -1,\n                  label: 'Descending',\n                }],\n                defaultValue: 1,\n                show: (data) => {\n                  return !data.props.dimSort && data.props.dimSortByNum;\n                },\n              },\n              dimSortByAlph: {\n                type: 'boolean',\n                label: 'Sort alphabetically',\n                ref: 'props.dimSortByAlph',\n                defaultValue: false,\n                show: (data) => {\n                  return !data.props.dimSort;\n                },\n              },\n              dimSortByAlphAsc: {\n                type: 'integer',\n                component: 'dropdown',\n                ref: 'props.dimSortByAlphAsc',\n                options: [{\n                  value: 1,\n                  label: 'Ascending',\n                }, {\n                  value: -1,\n                  label: 'Descending',\n                }],\n                defaultValue: 1,\n                show: (data) => {\n                  return !data.props.dimSort && data.props.dimSortByAlph;\n                },\n              },\n            },\n          },\n        },\n      },\n      addons: {\n        uses: 'addons',\n        items: {\n          dataHandling: {\n            uses: 'dataHandling',\n          },\n          // Section for Reference Line\n            ReferenceLine: {\n                label: 'Reference Line',\n                items: {\n                    fixlimit: {\n                        ref: 'props.limit',\n                        label: 'Limit',\n                        type: 'integer',\n                        defaultValue: \"\",\n                        show: (data) => {\n                            return [9].indexOf(data.props.analysisTypeId) >= 0;\n                        },\n                    },\n                    fixlimitlabel:{\n                      type:'string',\n                      label:'Label',\n                      ref:'props.limitlabel',\n                      defaultValue:'Reference Line',\n                      show:(data)=>{\n                        return[9].indexOf(data.props.analysisTypeId)>=0;\n                      },\n                    },\n                    //line style\n                    fixlimitstyle: {\n                        type: 'string',\n                        label: 'Line style',\n                        component: 'dropdown',\n                        ref: 'props.limitstyle',\n                        options: [{\n                            value: 'lines',\n                            label: 'lines',\n                        }, {\n                            value: 'dashdot',\n                            label: 'dashdot',\n                        }, {\n                            value: 'solid',\n                            label: 'solid',\n                        }, {\n                            value: 'dot',\n                            label: 'dot',\n                        }],\n                        defaultValue: 'lines',\n                        show: (data) => {\n                            return [9].indexOf(data.props.analysisTypeId) >= 0;\n                        },\n                    },\n                    //line width\n                    fixlimitwidth: {\n                        type: 'string',\n                        label: 'Line Width',\n                        component: 'dropdown',\n                        ref: 'props.limitwidth',\n                        options: [{\n                            value: '1',\n                            label: 'tiny',\n                        }, {\n                            value: '2',\n                            label: 'mid',\n                        }, {\n                            value: '4',\n                            label: 'huge',\n                        }],\n                        defaultValue: '1',\n                        show: (data) => {\n                            return [9].indexOf(data.props.analysisTypeId) >= 0;\n                        },\n                    },\n                    // line color\n                    fixlimitcolor: {\n                        label: 'Color',\n                        component: 'color-picker',\n                        ref: 'props.limitcolor',\n                        type: 'integer',\n                        defaultValue: 11,\n                        show: (data) => {\n                            return [9].indexOf(data.props.analysisTypeId) >= 0;\n                        },\n                    },\n                },\n            },\n          //end of section for Reference line\n        },\n      },\n      analysis: {\n        label: 'Analysis Settings',\n        items: {\n          analysisCategoryDropDown: {\n            type: 'integer',\n            component: 'dropdown',\n            label: 'Analysis Category',\n            ref: 'props.analysisCategoryId',\n            options: analysis.analysisCategories.map((d) => {\n              return {\n                value: d.id,\n                label: d.name,\n              };\n            }),\n            defaultValue: -1,\n          },\n          analysisTypeDropDown: {\n            type: 'integer',\n            component: 'dropdown',\n            label: 'Analysis Type',\n            ref: 'props.analysisTypeId',\n            options: (data) => {\n              const res = analysis.analysisTypes\n              .filter((d) => {\n                return d.category === data.props.analysisCategoryId;\n              })\n              .map((d) => {\n                return {\n                  value: d.id,\n                  label: d.name,\n                };\n              });\n              return res;\n            },\n            show: (data) => {\n              return data.props.analysisCategoryId >= 0;\n            },\n            defaultValue: -1,\n          },\n          displayTable: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Table display mode',\n            ref: 'props.displayTable',\n            options: [{\n              value: false,\n              label: 'Off',\n            }, {\n              value: true,\n              label: 'On',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [0, 9, 30].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          // *****\n          // Analysis Options\n          // *****\n          displayFormula: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Display formula',\n            ref: 'props.displayFormula',\n            options: [{\n              value: false,\n              label: 'Off',\n            }, {\n              value: true,\n              label: 'On',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [0].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          extendLine: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Extend line',\n            ref: 'props.extendLine',\n            options: [{\n              value: false,\n              label: 'Off',\n            }, {\n              value: true,\n              label: 'On',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [0].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          extendDurations: {\n            ref: 'props.extendDurations',\n            label: 'Extend durations',\n            type: 'string',\n            show: (data) => {\n              return [0].indexOf(data.props.analysisTypeId) >= 0 && data.props.extendLine === true;\n            },\n            defaultValue: 12,\n          },\n          interval: {\n            type: 'string',\n            component: 'dropdown',\n            label: 'Interval',\n            ref: 'props.interval',\n            options: [{\n              value: 'confidence',\n              label: 'confidence',\n            }, {\n              value: 'prediction',\n              label: 'prediction',\n            }],\n            defaultValue: 'confidence',\n            show: (data) => {\n              return [0, 1, 17].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          confidenceLevel: {\n            ref: 'props.confidenceLevel',\n            label: 'Confidence level',\n            type: 'string',\n            show: (data) => {\n              return [0, 1, 2, 3, 4, 5, 9, 17, 22, 30].indexOf(data.props.analysisTypeId) >= 0;\n            },\n            defaultValue: 0.95,\n          },\n          frequency: {\n            ref: 'props.frequency',\n            label: 'Frequency',\n            type: 'integer',\n            show: (data) => {\n              return [8, 9, 30].indexOf(data.props.analysisTypeId) >= 0;\n            },\n            defaultValue: 12,\n          },\n          // k-means\n          numberOfClusters: {\n            ref: 'props.numberOfClusters',\n            label: 'Number of clusters',\n            type: 'integer',\n            show: (data) => {\n              return [10, 16, 24].indexOf(data.props.analysisTypeId) >= 0;\n            },\n            defaultValue: 3,\n          },\n          optimizationMethod: {\n            ref: 'props.optimizationMethod',\n            label: 'Optimization method',\n            component: 'dropdown',\n            type: 'string',\n            options: [{\n              value: 'gap',\n              label: 'Gap Statistic',\n            }],\n            defaultValue: 'gap',\n            show: (data) => {\n              return [23].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          clusterMax: {\n            ref: 'props.clusterMax',\n            label: 'Max number of clusters',\n            type: 'integer',\n            show: (data) => {\n              return [23].indexOf(data.props.analysisTypeId) >= 0;\n            },\n            defaultValue: 10,\n          },\n          bootstrap: {\n            ref: 'props.bootstrap',\n            label: 'Number of Monte Carlo samples',\n            type: 'integer',\n            show: (data) => {\n              return [23].indexOf(data.props.analysisTypeId) >= 0;\n            },\n            defaultValue: 10,\n          },\n          scaleData: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Scale data',\n            ref: 'props.scaleData',\n            options: [{\n              value: false,\n              label: 'Off',\n            }, {\n              value: true,\n              label: 'On',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [10, 16, 23, 24].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          dividedBy: {\n            type: 'string',\n            component: 'dropdown',\n            label: 'Grouped by',\n            ref: 'props.dividedBy',\n            options: [{\n              value: 'variables',\n              label: 'Variables',\n            },\n            {\n              value: 'clusters',\n              label: 'Clusters',\n            }],\n            defaultValue: 'clusters',\n            show: (data) => {\n              return [24].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          // Time series analysis\n          differencing: {\n            ref: 'props.differencing',\n            label: 'Differencing',\n            component: 'dropdown',\n            type: 'integer',\n            options: [{\n              value: 0,\n              label: 'Off',\n            }, {\n              value: 1,\n              label: 'Seasonal differences',\n            }, {\n              value: 2,\n              label: 'First and seasonal differences',\n            }],\n            defaultValue: 0,\n            show: (data) => {\n              return [6, 7, 12].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          seasonalDifferences: {\n            ref: 'props.seasonalDifferences',\n            label: 'Seasonal differences',\n            type: 'integer',\n            defaultValue: 12,\n            show: (data) => {\n              return [6, 7, 12].indexOf(data.props.analysisTypeId) >= 0 && [1, 2].indexOf(data.props.differencing) >= 0;\n            },\n          },\n          firstDifferences: {\n            ref: 'props.firstDifferences',\n            label: 'First differences',\n            type: 'integer',\n            defaultValue: 1,\n            show: (data) => {\n              return [6, 7, 9, 12].indexOf(data.props.analysisTypeId) >= 0 && data.props.differencing === 2;\n            },\n          },\n          // Autocorrelation\n          lagMax: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Lag max',\n            ref: 'props.lagMax',\n            options: [{\n              value: true,\n              label: 'Auto',\n            }, {\n              value: false,\n              label: 'Custom',\n            }],\n            defaultValue: true,\n            show: (data) => {\n              return [6].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          lagMaxValue: {\n            ref: 'props.lagMaxValue',\n            label: 'Lag max',\n            type: 'integer',\n            defaultValue: 20,\n            show: (data) => {\n              return [6].indexOf(data.props.analysisTypeId) >= 0 && data.props.lagMax === false;\n            },\n          },\n          // Ljung-Box Test\n          lag: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Lag',\n            ref: 'props.lag',\n            options: [{\n              value: true,\n              label: 'Auto',\n            }, {\n              value: false,\n              label: 'Custom',\n            }],\n            defaultValue: true,\n            show: (data) => {\n              return [7].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          lagValue: {\n            ref: 'props.lagValue',\n            label: 'Lag',\n            type: 'integer',\n            defaultValue: 1,\n            show: (data) => {\n              return [7].indexOf(data.props.analysisTypeId) >= 0 && data.props.lag === false;\n            },\n          },\n          // Decompose time series\n          decomposeInFourCharts: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Display in 4 charts ',\n            ref: 'props.decomposeInFourCharts',\n            options: [{\n              value: true,\n              label: 'On',\n            }, {\n              value: false,\n              label: 'Off',\n            }],\n            defaultValue: true,\n            show: (data) => {\n              return [8].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          // ARIMA forecast\n          forecastingPeriods: {\n            ref: 'props.forecastingPeriods',\n            label: 'Forecasting periods',\n            type: 'integer',\n            show: (data) => {\n              return [9, 30].indexOf(data.props.analysisTypeId) >= 0;\n            },\n            defaultValue: 12,\n          },\n          displayARIMAParams: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Display ARIMA parameters',\n            ref: 'props.displayARIMAParams',\n            options: [{\n              value: false,\n              label: 'Off',\n            }, {\n              value: true,\n              label: 'On',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          autoARIMA: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Parameter settings',\n            ref: 'props.autoARIMA',\n            options: [{\n              value: true,\n              label: 'Auto',\n            }, {\n              value: false,\n              label: 'Custom',\n            }],\n            defaultValue: true,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          AROrder: {\n            ref: 'props.AROrder',\n            label: 'AR Order(p)',\n            type: 'integer',\n            defaultValue: 0,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\n            },\n          },\n          DegreeOfDifferencing: {\n            ref: 'props.DegreeOfDifferencing',\n            label: 'Degree of differencing(d)',\n            type: 'integer',\n            defaultValue: 0,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\n            },\n          },\n          MAOrder: {\n            ref: 'props.MAOrder',\n            label: 'MA Order(q)',\n            type: 'integer',\n            defaultValue: 0,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\n            },\n          },\n          SeasonalAROrder: {\n            ref: 'props.SeasonalAROrder',\n            label: 'Seasonal AR Order(P)',\n            type: 'integer',\n            defaultValue: 0,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\n            },\n          },\n          SeasonalDegreeOfDifferencing: {\n            ref: 'props.SeasonalDegreeOfDifferencing',\n            label: 'Seasonal degree of differencing(D)',\n            type: 'integer',\n            defaultValue: 0,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\n            },\n          },\n          SeasonalMAOrder: {\n            ref: 'props.SeasonalMAOrder',\n            label: 'Seasonal MA Order(Q)',\n            type: 'integer',\n            defaultValue: 0,\n            show: (data) => {\n              return [9].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoARIMA === false;\n            },\n          },\n          // HoltWinters\n          displayHoltWintersParams: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Display Holt-Winters parameters',\n            ref: 'props.displayHoltWintersParams',\n            options: [{\n              value: false,\n              label: 'Off',\n            }, {\n              value: true,\n              label: 'On',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [30].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          autoHoltWinters: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Parameter settings',\n            ref: 'props.autoHoltWinters',\n            options: [{\n              value: true,\n              label: 'Auto',\n            }, {\n              value: false,\n              label: 'Custom',\n            }],\n            defaultValue: true,\n            show: (data) => {\n              return [30].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          holtWintersAlpha: {\n            ref: 'props.holtWintersAlpha',\n            label: 'Alpha',\n            type: 'integer',\n            defaultValue: 1,\n            show: (data) => {\n              return [30].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoHoltWinters === false;\n            },\n          },\n          holtWintersBeta: {\n            ref: 'props.holtWintersBeta',\n            label: 'Beta',\n            type: 'integer',\n            defaultValue: 1,\n            show: (data) => {\n              return [30].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoHoltWinters === false;\n            },\n          },\n          holtWintersGamma: {\n            ref: 'props.holtWintersGamma',\n            label: 'Alpha',\n            type: 'integer',\n            defaultValue: 1,\n            show: (data) => {\n              return [30].indexOf(data.props.analysisTypeId) >= 0 && data.props.autoHoltWinters === false;\n            },\n          },\n          // ARIMA and Holt-Winters\n          seasonal: {\n            type: 'string',\n            component: 'dropdown',\n            label: 'Seasonal',\n            ref: 'props.seasonal',\n            options: [{\n              value: 'mult',\n              label: 'Multiplicative',\n            }, {\n              value: 'additive',\n              label: 'Additive',\n            }],\n            defaultValue: 'additive',\n            show: (data) => {\n              return [8, 30].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          // Text mining / Wordcloud\n          numOfFrequentTerms: {\n            ref: 'props.numOfFrequentTerms',\n            label: 'Show top N frequent terms',\n            type: 'integer',\n            defaultValue: 50,\n            show: (data) => {\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          tolower: {\n            type: 'string',\n            component: 'switch',\n            label: 'Convert to lower case',\n            ref: 'props.tolower',\n            options: [{\n              value: 'FALSE',\n              label: 'Off',\n            }, {\n              value: 'TRUE',\n              label: 'On',\n            }],\n            defaultValue: 'TRUE',\n            show: (data) => {\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          removeNumbers: {\n            type: 'string',\n            component: 'switch',\n            label: 'Remove numbers',\n            ref: 'props.removeNumbers',\n            options: [{\n              value: 'FALSE',\n              label: 'Off',\n            }, {\n              value: 'TRUE',\n              label: 'On',\n            }],\n            defaultValue: 'TRUE',\n            show: (data) => {\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          stopwords: {\n            type: 'string',\n            component: 'switch',\n            label: 'Remove English common stepwords',\n            ref: 'props.stopwords',\n            options: [{\n              value: 'FALSE',\n              label: 'Off',\n            }, {\n              value: 'TRUE',\n              label: 'On',\n            }],\n            defaultValue: 'TRUE',\n            show: (data) => {\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          removePunctuation: {\n            type: 'string',\n            component: 'switch',\n            label: 'Remove punctuations',\n            ref: 'props.removePunctuation',\n            options: [{\n              value: 'FALSE',\n              label: 'Off',\n            }, {\n              value: 'TRUE',\n              label: 'On',\n            }],\n            defaultValue: 'TRUE',\n            show: (data) => {\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          stemming: {\n            type: 'string',\n            component: 'switch',\n            label: 'Text stemming',\n            ref: 'props.stemming',\n            options: [{\n              value: 'FALSE',\n              label: 'Off',\n            }, {\n              value: 'TRUE',\n              label: 'On',\n            }],\n            defaultValue: 'TRUE',\n            show: (data) => {\n              return [13].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          // Decision tree\n          rpartMethod: {\n            type: 'string',\n            component: 'dropdown',\n            label: 'Method',\n            ref: 'props.rpartMethod',\n            options: [{\n              value: 'class',\n              label: 'Class',\n            }, {\n              value: 'anova',\n              label: 'Anova',\n            }],\n            defaultValue: 'class',\n            show: (data) => {\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          minSplit: {\n            ref: 'props.minSplit',\n            label: 'Minimum split',\n            type: 'integer',\n            defaultValue: 20,\n            show: (data) => {\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          minBucket: {\n            ref: 'props.minBucket',\n            label: 'Minimum bucket',\n            type: 'integer',\n            defaultValue: 6,\n            show: (data) => {\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          cp: {\n            ref: 'props.cp',\n            label: 'Complexity parameter(cp)',\n            type: 'number',\n            defaultValue: 0.01,\n            show: (data) => {\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          maxDepth: {\n            ref: 'props.maxDepth',\n            label: 'Max depth',\n            type: 'integer',\n            defaultValue: 30,\n            show: (data) => {\n              return [25, 26].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          defaultCollapseLevel: {\n            ref: 'props.defaultCollapseLevel',\n            label: 'Default Collapse Level',\n            type: 'integer',\n            defaultValue: 3,\n            show: (data) => {\n              return [25].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          displayResultsOnAllNodes: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Display results on all nodes',\n            ref: 'props.displayResultsOnAllNodes',\n            options: [{\n              value: true,\n              label: 'On',\n            }, {\n              value: false,\n              label: 'Off',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [25].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          calcOddsRatio: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Calculate odds ratio',\n            ref: 'props.calcOddsRatio',\n            options: [{\n              value: true,\n              label: 'On',\n            }, {\n              value: false,\n              label: 'Off',\n            }],\n            defaultValue: true,\n            show: (data) => {\n              return [29].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          splitDataset: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Split into training and test datasets',\n            ref: 'props.splitDataset',\n            options: [{\n              value: true,\n              label: 'On',\n            }, {\n              value: false,\n              label: 'Off',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return [25, 27, 29].indexOf(data.props.analysisTypeId) >= 0;\n            },\n          },\n          splitPercentage: {\n            ref: 'props.splitPercentage',\n            label: 'Treat first N% records as training dataset',\n            type: 'number',\n            min: 0.01,\n            max: 0.99,\n            defaultValue: 0.8,\n            show: (data) => {\n              return ([25, 27, 29].indexOf(data.props.analysisTypeId) >= 0 && data.props.splitDataset === true) || ([26, 28].indexOf(data.props.analysisTypeId) >= 0);\n            },\n          },\n          // *****\n          // Analysis Options\n          // *****\n          debugMode: {\n            type: 'boolean',\n            component: 'switch',\n            label: 'Debug mode',\n            ref: 'props.debugMode',\n            options: [{\n              value: false,\n              label: 'Off',\n            }, {\n              value: true,\n              label: 'On',\n            }],\n            defaultValue: false,\n            show: (data) => {\n              return (enableDebugMode);\n            },\n          },\n          debugModeLink: {\n            label: 'What is debug mode?',\n            component: 'link',\n            url: 'https://github.com/mhamano/advanced-analytics-toolbox/blob/master/docs/debugmode.md',\n            show: (data) => {\n              return (enableDebugMode);\n            },\n          },\n        },\n      },\n      settings: {\n        uses: 'settings',\n        items: {\n          presentation: {\n            type: 'items',\n            label: 'Presentation',\n            items: {\n              line: {\n                type: 'string',\n                component: 'dropdown',\n                ref: 'props.line',\n                options: [{\n                  value: 'none',\n                  label: 'Line',\n                }, {\n                  value: 'tozeroy',\n                  label: 'Area',\n                }],\n                defaultValue: 'none',\n                show: (data) => {\n                  return [0, 6, 8, 9, 17, 20, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              datapoints: {\n                type: 'boolean',\n                label: 'Show data points',\n                ref: 'props.datapoints',\n                defaultValue: false,\n                show: (data) => {\n                  return [0, 6, 8, 9, 17, 20, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              borderWidth: {\n                type: 'number',\n                component: 'slider',\n                label: 'Border Width',\n                ref: 'props.borderWidth',\n                min: 0,\n                max: 10,\n                step: 1,\n                defaultValue: 1,\n                show: (data) => {\n                  return [0, 6, 8, 9, 15, 17, 20, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              pointRadius: {\n                type: 'number',\n                component: 'slider',\n                label: 'Point Radius',\n                ref: 'props.pointRadius',\n                min: 1,\n                max: 10,\n                step: 1,\n                defaultValue: 6,\n                show: (data) => {\n                  return [0, 6, 8, 9, 15, 17, 20, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              bubbleSize: {\n                type: 'number',\n                component: 'slider',\n                label: 'Bubble Size',\n                ref: 'props.bubbleSize',\n                min: 0,\n                max: 50,\n                step: 1,\n                defaultValue: 12,\n                show: (data) => {\n                  return [1, 10, 16, 19, 25].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              marginTop: {\n                type: 'number',\n                component: 'slider',\n                label: 'Margin top',\n                ref: 'props.marginTop',\n                min: 0,\n                max: 200,\n                step: 1,\n                defaultValue: 10,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 10, 14, 15, 16, 17, 19, 20, 23, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              marginBottom: {\n                type: 'number',\n                component: 'slider',\n                label: 'Margin bottom',\n                ref: 'props.marginBottom',\n                min: 0,\n                max: 200,\n                step: 1,\n                defaultValue: 10,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 10, 14, 15, 16, 17, 19, 20, 23, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              marginRight: {\n                type: 'number',\n                component: 'slider',\n                label: 'Margin right',\n                ref: 'props.marginRight',\n                min: 0,\n                max: 200,\n                step: 1,\n                defaultValue: 10,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 10, 14, 15, 16, 17, 19, 20, 23, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              marginLeft: {\n                type: 'number',\n                component: 'slider',\n                label: 'Margin left',\n                ref: 'props.marginLeft',\n                min: 0,\n                max: 200,\n                step: 1,\n                defaultValue: 10,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 10, 14, 15, 16, 17, 19, 20, 23, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              defineScreenSize: {\n                type: 'boolean',\n                component: 'switch',\n                label: 'Screen size',\n                ref: 'props.defineScreenSize',\n                options: [{\n                  value: true,\n                  label: 'Auto',\n                }, {\n                  value: false,\n                  label: 'Custom',\n                }],\n                defaultValue: true,\n                show: (data) => {\n                  return [25].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              screenWidth: {\n                label: 'Width',\n                ref: 'props.screenWidth',\n                type: 'integer',\n                defaultValue: 960,\n                show: (data) => {\n                  return [25].indexOf(data.props.analysisTypeId) >= 0 && data.props.defineScreenSize === false;\n                },\n              },\n              screenHeight: {\n                label: 'Height',\n                ref: 'props.screenHeight',\n                type: 'integer',\n                defaultValue: 500,\n                show: (data) => {\n                  return [25].indexOf(data.props.analysisTypeId) >= 0 && data.props.defineScreenSize === false;\n                },\n              },\n            },\n          },\n          colorsAndLegend: {\n            type: 'items',\n            label: 'Colors and legend',\n            items: {\n              colors: {\n                type: 'boolean',\n                component: 'switch',\n                label: 'Colors',\n                ref: 'props.colors',\n                options: [{\n                  value: true,\n                  label: 'Auto',\n                }, {\n                  value: false,\n                  label: 'Custom',\n                }],\n                defaultValue: true,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 15, 17, 19, 20, 25, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              // colorBy: {\n              //   type: 'string',\n              //   component: 'dropdown',\n              //   ref: 'props.colorBy',\n              //   options: [{\n              //     value: 'single',\n              //     label: 'Single color',\n              //   }, {\n              //     value: 'dimension',\n              //     label: 'By dimension',\n              //   }],\n              //   defaultValue: 'single',\n              //   show: (data) => {\n              //     return  [1].indexOf(data.props.analysisTypeId) >= 0 && data.props.colors === false;\n              //   },\n              // },\n              colorForMain: {\n                label: 'Color',\n                component: 'color-picker',\n                ref: 'props.colorForMain',\n                type: 'integer',\n                defaultValue: 3,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 15, 17, 19, 20, 25, 29, 30].indexOf(data.props.analysisTypeId) >= 0 && data.props.colors === false;\n                },\n              },\n              colorForSub: {\n                label: 'Color (Trend/Forecast)',\n                component: 'color-picker',\n                ref: 'props.colorForSub',\n                type: 'integer',\n                defaultValue: 7,\n                show: (data) => {\n                  return [0, 1, 9, 17, 19, 20, 30].indexOf(data.props.analysisTypeId) >= 0 && data.props.colors === false;\n                },\n              },\n              showLegend: {\n                type: 'boolean',\n                component: 'switch',\n                label: 'Show legend',\n                ref: 'props.showLegend',\n                options: [{\n                  value: true,\n                  label: 'On',\n                }, {\n                  value: false,\n                  label: 'Off',\n                }],\n                defaultValue: false,\n                show: (data) => {\n                  return [0, 1, 9, 10, 15, 16, 17, 19, 20, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n            },\n          },\n          xAxis: {\n            type: 'items',\n            label: 'X-axis',\n            items: {\n              xLabelsAndTitle: {\n                type: 'boolean',\n                label: 'Show title',\n                component: 'switch',\n                ref: 'props.xLabelsAndTitle',\n                options: [{\n                  value: true,\n                  label: 'On',\n                }, {\n                  value: false,\n                  label: 'Off',\n                }],\n                defaultValue: false,\n                show: (data) => {\n                  return [0, 1, 9, 10, 16, 17, 20, 24, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              xAxisPosition: {\n                type: 'string',\n                label: 'Position',\n                component: 'dropdown',\n                ref: 'props.xAxisPosition',\n                options: [{\n                  value: 'bottom',\n                  label: 'Bottom',\n                }, {\n                  value: 'top',\n                  label: 'Top',\n                }],\n                defaultValue: 'bottom',\n                show: (data) => {\n                  return [0, 1, 9, 10, 15, 17, 20, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              xScale: {\n                type: 'boolean',\n                component: 'switch',\n                label: 'Scale',\n                ref: 'props.xScale',\n                options: [{\n                  value: true,\n                  label: 'On',\n                }, {\n                  value: false,\n                  label: 'Off',\n                }],\n                defaultValue: true,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 10, 15, 17, 19, 20, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              xAxisType: {\n                type: 'string',\n                label: 'Axis Type',\n                component: 'dropdown',\n                ref: 'props.xAxisType',\n                options: [{\n                  value: '-',\n                  label: 'Auto',\n                }, {\n                  value: 'linear',\n                  label: 'Linear',\n                }, {\n                  value: 'category',\n                  label: 'Category',\n                }, {\n                  value: 'log',\n                  label: 'Log',\n                }, {\n                  value: 'data',\n                  label: 'Date',\n                }],\n                defaultValue: '-',\n                show: (data) => {\n                  return [0, 17].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n            },\n          },\n          yAxis: {\n            type: 'items',\n            label: 'Y-axis',\n            items: {\n              yLabelsAndTitle: {\n                type: 'boolean',\n                label: 'Show title',\n                component: 'switch',\n                ref: 'props.yLabelsAndTitle',\n                options: [{\n                  value: true,\n                  label: 'On',\n                }, {\n                  value: false,\n                  label: 'Off',\n                }],\n                defaultValue: false,\n                show: (data) => {\n                  return [0, 1, 9, 10, 16, 17, 20, 24, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              yAxisPosition: {\n                type: 'string',\n                label: 'Position',\n                component: 'dropdown',\n                ref: 'props.yAxisPosition',\n                options: [{\n                  value: 'left',\n                  label: 'Left',\n                }, {\n                  value: 'right',\n                  label: 'Right',\n                }],\n                defaultValue: 'left',\n                show: (data) => {\n                  return [0, 1, 9, 10, 15, 17, 20, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n              yScale: {\n                type: 'boolean',\n                component: 'switch',\n                label: 'Scale',\n                ref: 'props.yScale',\n                options: [{\n                  value: true,\n                  label: 'On',\n                }, {\n                  value: false,\n                  label: 'Off',\n                }],\n                defaultValue: true,\n                show: (data) => {\n                  return [0, 1, 6, 8, 9, 10, 15, 17, 19, 24, 29, 30].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n            },\n          },\n          zAxis: {\n            type: 'items',\n            label: 'Z-axis',\n            show: (data) => {\n              return [16].indexOf(data.props.analysisTypeId) >= 0;\n            },\n            items: {\n              zLabelsAndTitle: {\n                type: 'boolean',\n                label: 'Show title',\n                component: 'switch',\n                ref: 'props.zLabelsAndTitle',\n                options: [{\n                  value: true,\n                  label: 'On',\n                }, {\n                  value: false,\n                  label: 'Off',\n                }],\n                defaultValue: false,\n                show: (data) => {\n                  return [16].indexOf(data.props.analysisTypeId) >= 0;\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n});\n"]}